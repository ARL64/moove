<?php

namespace moove\ActiviteBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * ParticiperRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParticiperRepository extends EntityRepository
{
    public function findByOrganisateur($idOrganisateur, $accepter = null)
    {
        $requete = $this->_em->createQueryBuilder() 
            ->select('p')
            ->from($this->_entityName, 'p')
            ->join('p.activite', 'a')
            ->addSelect('a')
            ->join('a.organisateur', 'u')
            ->addSelect('u')
            ->Where('a.organisateur = :organisateur')
            ->setParameter('organisateur', $idOrganisateur)
        ;

        if(!is_null($accepter))
        {
            $requete->andWhere('p.estAccepte = :accepter')
                    ->setParameter('accepter', $accepter)
            ;
        }
        
        // on récupère la commande DQL
        $query = $requete->getQuery();
        
        // on retourne un tableau de résultat
        return $query->getResult();
    }
    
    
    public function findByUtilisateurEstAccepter($idUtilisateur, $terminer, $accepter = null)
    {
        $requete = $this->_em->createQueryBuilder() 
            ->select('p')
            ->from($this->_entityName, 'p')
            ->join('p.activite', 'a')
            
            ->Where('p.utilisateur = :utilisateur')
            ->setParameter('utilisateur', $idUtilisateur)
        ;
        
        if(!is_null($terminer))
        {
            $requete->andWhere('a.estTerminee = :terminer')
                    ->setParameter('terminer', $terminer)
            ;
        }
        
        if(!is_null($accepter))
        {
            $requete->andWhere('p.estAccepte = :accepter')
                    ->setParameter('accepter', $accepter)
            ;
        }

        // on récupère la commande DQL
        $query = $requete->getQuery();
        
        // on retourne un tableau de résultat
        return $query->getResult();    
        
    }
    
}
