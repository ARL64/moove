{% extends "::vueMere.html.twig" %}
{% block title %}Rechercher des activités{% endblock %}
{% block activeRechercher %}active{% endblock %}
{% block stylesheets %}
    {#<link rel="stylesheet" href="{{ asset('bundles/mooveactivite/css/rechercher.css') }}">#}
    <link rel="stylesheet" href="{{ asset('css/slider/ion.rangeSlider.css') }}">
    <link rel="stylesheet" href="{{ asset('css/slider/ion.rangeSlider.skinFlat.css') }}">
    <link rel="stylesheet" href="{{ asset('css/bootstrap-datepicker.min.css') }}">
    <link rel="stylesheet" href="{{ asset('css/Glyphter.css') }}"> 
{% endblock %}

{% block body %} 
    {# Titre de la page #}
    <section class="content-header">
      <h1>Rechercher</h1>
    </section>
     
    {# Contenu principal #}
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <form name="base" method="POST" class="form-inline">
                    <input id="autocomplete" type="text" class="form-control" placeholder="Entrez une ville..." {% if app.request.query.get('ville') %}value="{{ app.request.query.get('ville') }}"{% endif %} name="ville">
                    <div class="input-group date">
                      <input type="text" placeholder="Date de l'activité" {% if app.request.query.get('date') %}value="{{ app.request.query.get('date') |date('d/m/Y') }}"{% endif %} class="form-control" name="date"><span class="input-group-addon" ><i class="fa fa-calendar"></i></span>
                    </div>
                    <select name="order" class="form-control" id="select">
                      <option value="">Trier par</option>
                      <option value="dateHeureRDV" {% if app.request.query.get('order') == "dateHeureRDV" %}selected{% endif %}>Date</option>
                      {#<option value="date">Date</option>#}
                      <option value="niveau" {% if app.request.query.get('order') == "niveau" %}selected{% endif %}>Niveau</option>
                      <option value="sport" {% if app.request.query.get('order') == "sport" %}selected{% endif %}>Sport</option>
                      {#<option value="ville">Ville</option>#}
                    </select>
                    <select name="nbResultatsParPage" class="form-control" id="selectNnbResultatsParPage">
                      <option value="">Résultats par page</option>
                      <option {% if app.request.query.get('nbResult') == 1 %}selected{% endif %}>1</option>
                      <option {% if app.request.query.get('nbResult') == 2 %}selected{% endif %}>2</option>
                      <option {% if app.request.query.get('nbResult') == 3 %}selected{% endif %}>3</option>
                      <option {% if app.request.query.get('nbResult') == 4 %}selected{% endif %}>4</option>
                    </select>
                    {# On utilise ici la fonction sumbit() du 2nd formulaire pour envoyer le résultat. On dois donc rajouté majDate() car on ne clique pas sur le bouton.#}
                    <button type="button" class="btn btn-default" onclick="javascript:majDate();document.filtre.submit()">Rechercher</button>
                </form>
                <p>
                    {% if tabActivites.getTotalItemCount > 1 %} 
                        {{ tabActivites.getTotalItemCount }} résultats
                    {% else %}
                        {{ tabActivites.getTotalItemCount }} résultat
                    {% endif %}
                </p>
            </div>
            <div class="col-lg-12">
                <div class="col-lg-4 col-md-12  col-xs-12">
                    <div>
                        <h2>Filtres de recherche</h2>
                        
                        <form name="filtre" method="POST">
                        {# hidden (mise a jour par javascript a partir de l'autre formulaire #}
                        <input type="hidden" name="ville" value="">
                        <input type="hidden" name="date" value="">
                        <input type="hidden" name="order" value="">
                        <input type="hidden" name="nbResultatsParPage" value="">
        
                        <label for="heure">Heure de départ</label><br>
                        <input id="heure" name="heure" type="text"/><br><br>
                        <div class="col-md-6">
                        {# Liste des sports. Le premier cochera / décochera tous les autres. #}
                            <label>Sport</label><br/>
                            <input type="checkbox" name="name_allSport" id="name_allSport" onChange='javascript:checkSport()' value=""/> Tous les sports<br/>
                            {% for sport in tabSport %}
                                {% set nameSport = "name_" ~ sport.nom %}
                          
                                {% if sport.nom|replace({'é': 'e', 'è' : 'e'}) in app.request.query.get('sport') %}
                                    <input type="checkbox" name="name_{{ sport.nom }}" id="id_{{ sport.nom }}" value="{{ sport.nom }}" checked/> {{ sport.nom }}<br/>
                                {% else %}
                                    <input type="checkbox" name="name_{{ sport.nom }}" id="id_{{ sport.nom }}" value="{{ sport.nom }}" /> {{ sport.nom }}<br/>
                                {% endif %}
                            {% endfor %}
                        </div>
                        <div class="col-md-6">
                        {# Liste des Niveaux. Le premier cochera / décochera tous les autres. #}
                            <label>Niveau</label> <br/>
                            <input type="checkbox" name="name_allNiveau" id="name_allNiveau" onChange='javascript:checkNiveau()' value=""/> Tous les niveaux<br/>
                            {% for niveau in tabNiveau %}
                                {% set nameNiveau = "name_" ~ niveau.libelle %}
                                {% if niveau.libelle|replace({'é': 'e', 'è' : 'e'}) in app.request.query.get('niveau') %}
                                    <input type="checkbox" name="name_{{ niveau.libelle }}" id="id_{{ niveau.libelle }}" checked/> {{ niveau.libelle }}<br/>
                                {% else %}
                                    <input type="checkbox" name="name_{{ niveau.libelle }}" id="id_{{ niveau.libelle }}" /> {{ niveau.libelle }}<br/>
                                {% endif %}
                            {% endfor %}
                        </div>
                        <br>
                        {# Radio groupe des photos #}
                            <label> Photo </label></br>
                            <input type="radio" name="photo" id="tous" value="all" {% if app.request.query.get('photo') %}{% if app.request.query.get('photo') == "all" %}checked{% endif %}{% else %}checked{% endif %}> Tous<br/>
                            <input type="radio" name="photo" id="avec" value="yes" {% if app.request.query.get('photo') == "yes" %}checked{% endif %}> Avec photo<br/><br>
                            {#<input type="radio" name="photo" id="sans" value="no" >Sans photo<br/>#}
        
                            <label for="nbPlaces">Nombres de places</label>
                            <input id="nbPlaces" name="nbPlaces" type="text"/><br>
                            <label for="nbPlacesRestantes">Nombres de places restantes</label>
                            <input id="nbPlacesRestantes" name="nbPlacesRestantes" type="text"/><br>
                            {# Pas fini distance entre deux lieux
                            <label for="rayonRecherche">Rayon de recherche en km</label>
                            <input id="rayonRecherche" name="rayonRecherche" type="text"/><br>
                            #}
                            {# Avec la fonction onClick, on copie la valeur des champs du 1er formulaire dans le 2nd car on ne pue pas submit deux form en une fois. #}
                            {#<button name= "filtrer" type="submit" class="btn btn-primary" onclick="javascript:majDate()">Filtrer</button>#}
                		</form>
                    </div>
                </div>
                <div class="col-lg-8 col-md-12 col-xs-12">
                    {% for activite in tabActivites %}
                    <a class="list-group-item" href="{{ path('moove_activite_detailsActivite', {idActivite: activite.id}) }}">
                        <article class="row">
                            <center><h4 class="list-group-item-heading"><strong><i style="font-size:20px;" class="icon-{{ activite.sportPratique.nomIcone }}"></i> Activité {{ activite.sportPratique.nom | lower }} - {{ activite.niveauRequis.libelle }}</strong></h4></center>
                            <div class="col-lg-4">
                                <div class="media">
                                    <div class="media-left">
                                        <img class="media-object" src="{{ asset(activite.organisateur.URLAvatar) }}" alt="Photo de l'organisateur" width="64" height="64">
                                    </div>
                                    <div class="media-body">
                                        <h4 class="media-heading">{{ activite.organisateur.prenom ~ " " ~ activite.organisateur.nom }}</h4>
                                        <p>{{ ('now'|date('Y') - activite.organisateur.dateNaissance|date('Y') - 1) + ('now'|date('2010-m-d')|date('U') - activite.organisateur.dateNaissance|date('2010-m-d')|date('U') >= 0 ? 1 : 0) }} ans<br>
                                        {% for pratiquer in activite.organisateur.pratiquer %}{% if pratiquer.sport == activite.sportPratique %}Niveau organisateur : {{ pratiquer.niveau.libelle }}{% endif %}{% endfor %}</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="media">
                                    <div class="media-body">
                                        <h4 class="media-heading">{{ activite.dateHeureRDV | localizeddate('none', 'none', null, null, "cccc d LLLL yyyy à H'h'mm")|capitalize }}</h4>
                                        <p><i data-toggle="tooltip" data-placement="top" title="Ville correspondante au lieu de rendez-vous" class="fa fa-circle-o" style="color:#ff9800"></i> Ville de départ : {{ activite.lieuRDV.ville }}<br>
                                        {# si le lieu d'arrivée a été spécifié on affiche la ville du lieu d'arrivée #}
                                        {% if activite.lieuArrivee is not null %}
                                            <i data-toggle="tooltip" data-placement="top" title="Ville correspondante au lieu d'arrivée" class="fa fa-circle-o" style="color:#e51c23"></i> Ville d'arrivée : {{ activite.lieuArrivee.ville }}<br>
                                        {# sinon on affiche "Non spécifié" #}
                                        {% else %}
                                            <i data-toggle="tooltip" data-placement="top" title="Ville correspondante au lieu d'arrivée" class="fa fa-circle-o" style="color:#e51c23"></i> Non spécifié<br>
                                        {% endif %}
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="media">
                                    <div class="media-body">
                                        <h4 class="media-heading">{{ activite.nbParticipants }} participant{% if activite.nbParticipants == 1 %}{% else %}s{% endif %}</h4>
                                        <p><i class="fa fa-users"></i> {{ activite.nbPlaces - activite.nbParticipants }} {% if activite.nbPlaces > 1 %} places restantes {% else %} place restante {% endif %}</p>
                                    </div>
                                </div>
                            </div>
                        </article>
                    </a>
                    {% else %}
                        <center><h4>Aucune activité trouvée.</h4></center>
                    {% endfor %}
                    <div class="col-md-5 col-md-offset-7">
                        <div class="navigation">
                            {{ knp_pagination_render(tabActivites) }}
                        </div>
                    </div>
                </div>
            </div>
    </section>
    
{% endblock %}
{% block javascripts %}
    <script src="{{ asset('js/ion.rangeSlider.min.js') }}"></script>
    <script src="{{ asset('js/bootstrap-datepicker.min.js') }}" charset="utf-8"></script>
    <script src="{{ asset('locales/bootstrap-datepicker.fr.min.js') }}" charset="UTF-8"></script>
    <script type="text/javascript">
        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })
        $("#heure").ionRangeSlider({
            {% set heureMin = app.request.query.get('hMin')|split('h') %}
            {% set heureMax = app.request.query.get('hMax')|split('h') %}
            type: "double",
            grid: true,
            min: 0,
            max: 24,
            from: {% if app.request.query.get('hMin') %}{{ heureMin[0] }}{% else %}0{% endif %},
            to: {% if app.request.query.get('hMax') %}{{ heureMax[0] }}{% else %}24{% endif %},
            postfix: 'h'
        });
        
        $("#nbPlaces").ionRangeSlider({
            {% set nbPlaceMin = app.request.query.get('placeRestanteMin') %}
            {% set nbPlaceMax = app.request.query.get('placeRestanteMax') %}
            type: "double",
            grid: true,
            min: 1,
            max: 19,
            from: {% if app.request.query.get('placeRestanteMin') %}{{ nbPlaceMin }}{% else %}0{% endif %},
            to: {% if app.request.query.get('placeRestanteMax') %}{{ nbPlaceMax }}{% else %}19{% endif %},
            postfix: ' places'
        });

        $("#nbPlacesRestantes").ionRangeSlider({
            grid: true,
            min: 1,
            max: 19,
            from: {% if app.request.query.get('nbPlace') %}{{ app.request.query.get('nbPlace') }}{% else %}1{% endif %},
            postfix: ' places restantes',
            prefix: 'Au moins '
        });
        
        {# Distance entre deux lieux non terminée
        $("#rayonRecherche").ionRangeSlider({
            grid: true,
            min: 1,
            max: 99,
            from: {% if app.request.query.get('rayonRecherche') %}{{ app.request.query.get('rayonRecherche') }}{% else %}1{% endif %},
            postfix: ' km',
            prefix: 'Rayon de '
        });#}
        
        $('.input-group.date').datepicker({
          format: "dd/mm/yyyy",
          language: "fr",
          orientation: "bottom auto",
          autoclose: false
        });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDmo1B7t569caLPAVZZNdcoH97JCnHRqNM&signed_in=true&libraries=places&callback=initAutocomplete"
        async defer></script>
    <script>
        var input = (document.getElementById('autocomplete'));
        var autocomplete;
        
        function initAutocomplete() {
          // Create the autocomplete object, restricting the search to cities
          // location types.
            var options = {
              types: ['(cities)'],
              componentRestrictions: {country: 'fr'}
            };
          autocomplete = new google.maps.places.Autocomplete(input, options);
        }
    </script>
    <script>
        function majDate()
        {
            document.filtre.date.value = document.base.date.value;
            document.filtre.ville.value = document.base.ville.value;
            document.filtre.order.value = document.base.order.value;
            document.filtre.nbResultatsParPage.value = document.base.nbResultatsParPage.value;
        }
    
    	function checkSport()
    	{
    		var form = document.filtre;
    		var isChecked = form.name_allSport.checked;
    		// on vérifie tous les sports de la base
    		{% for sport in tabSport %}    
    			form.name_{{ sport.nom }}.checked = isChecked
            {% endfor %}	
    	}
    	
    	function checkNiveau()
    	{
    		var form = document.filtre;
    		var isChecked = form.name_allNiveau.checked;
    		
    		{% for niveau in tabNiveau %}    
    			form.name_{{ niveau.libelle }}.checked = isChecked
            {% endfor %}	
    	}
    </script>
{% endblock %}