{% extends "::vueMere.html.twig" %}
{% block title %}Détails activité {{activite.id}} {% endblock %} 

{% block stylesheets %}
<link rel="stylesheet" href="{{ asset('bundles/mooveactivite/css/details/style.css') }}">
<link rel="stylesheet" href="{{ asset('css/Glyphter.css') }}"> 
{% endblock %} 

{% block body %}


{# Titre de la page #}
<section class="content-header">
  <h1><h2><span class="label label-primary"> {{ activite.organisateur.prenom ~ " " ~ activite.organisateur.nom }} propose une activité {{ activite.sportPratique.nom | lower }}</span></h2></h1>
</section>

{# Contenu principal #}

{# Message flash #}
<section class="content">
  <div class="row">
    {% if app.session.flashbag.has('notice') %}
    <div class="alert alert-success alert-dismissible" role="alert">
      <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
      <ul>
        {% for flashMessage in app.session.flashbag.get('notice') %}
        <li>{{ flashMessage }}</li>
        {% endfor %}
      </ul>
    </div>
    {% endif %}
    <div class="col-md-12">
      {# affiche la photo de l'organisateur #}
      <div class="media">
        <div class="media-left">
          <img class="media-object" src="{{ asset(activite.organisateur.URLAvatar) }}" alt="photo de l'utilisateur" width="75" height="75">
        </div>
        {# Affiche dans l'ordre le prenom concaténé avec le nom, puis le niveau dans le sport de l'activité
            et la date de publication #} 
        <div class="media-body">
          <h4 class="media-heading">{{ activite.organisateur.prenom ~ " " ~ activite.organisateur.nom }}</h4>
          <p>
            {% if niveauOrganisateur is not null %} 
              {% if activite.organisateur.sexe == 'femme' %}
                {% if niveauOrganisateur != 'intermédiaire' %}
                  {{ niveauOrganisateur ~'e' }}
                {% else %}
                  {{ niveauOrganisateur }}
                {% endif %}
              {% else %}
                {{ niveauOrganisateur }}
              {% endif %}
            {% else %}
              {% if activite.organisateur.sexe == 'femme' %} 
                Non pratiquante 
              {% else %}
                Non pratiquant
              {% endif %} 
            {% endif %}
          </p>
          <small>Annonce publiée le {{ activite.dateCreation | localizeddate('none', 'none', null, null, "d MMMM Y à H'h'mm") }}</small>
        </div>
      </div>
    </div>
  </div>
  <br>
  
  <div class="row">
    {# colone où se trouve les panneaux informations sur l'activité et information #}
    <div class="col-md-8">
      {# panel principal avec les informations de l'activité #}
      <div class="panel panel-default">
        {# titre du panel avec les informations#}
        <div class="panel-heading">
          <h3 class="panel-title">Informations sur l'activité</h3>
        </div>
        {# Corps du panel #}
        <div class="panel-body">
          {# Affiche le sport pratiqué #}
          <div class="infos">
            <p><span class="info-label text-muted">Sport</span><span class="info-valeur"><i class="icon-{{ activite.sportPratique.nomIcone }}"></i>{{ activite.sportPratique.nom }}</span></p>
          </div>
          {# Affiche le niveau requis #}
          <div class="infos">
            <p><span class="info-label text-muted">Niveau requis</span><span class="info-valeur"><i class="fa fa-bar-chart"></i>{{ activite.niveauRequis.libelle }}</span></p>
          </div>
          {# Affiche la ville et son code postal#}
          <div class="infos">
            <p><span class="info-label text-muted">Ville</span><span class="info-valeur"><i class="fa fa-building-o"></i>{{ activite.lieuRDV.ville ~ ", " ~ activite.lieuRDV.codePostal }}</span></p>
          </div>
          
          {# on verifie que le lieu existe #}
          {% if activite.lieuRDV is not null %}
          {# on vérifie que ce lieu a un nom de rue non nul #}
            {% if activite.lieuRDV.nomRue != null %}
              {# Affiche le numero(s'il existe) et nom de rue du lieu de rdv#}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu de rendez-vous</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#ff9800"></i>
                {% if activite.lieuRDV.numeroRue != 0 %}{{ activite.lieuRDV.numeroRue ~ ", " }}
                {% endif %}{{ activite.lieuRDV.nomRue }}</span></p>
              </div>
            {% else %}
              {# si le nom de rue est nul #}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu de rendez-vous</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#ff9800"></i>Non spécifié</span></p>
              </div>
            {% endif %}
          {# si le lieu est nul #} 
          {% else %}
            <div class="infos">
                <p><span class="info-label text-muted">Lieu de rendez-vous</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#ff9800"></i>Non spécifié</span></p>
              </div>
          {% endif %}
          
          {# on vérifie que le lieu existe #}
          {% if activite.lieuDepart is not null %}
            {# si le nom de rue du lieu de départ n'est pas nul #}
            {% if activite.lieuDepart.nomRue != null %}
              {# Affiche le numero(s'il existe) et le nom de rue du lieu de départ #}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu de départ</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#4caf50"></i>
                {% if activite.lieuDepart.numeroRue != 0 %}{{ activite.lieuDepart.numeroRue ~ ", " }}
                {% endif %}{{ activite.lieuDepart.nomRue }}</span></p>
              </div>
            {% else %}
              {# s'il n'y a pas de nom de rue du lieu de départ on affiche non spécifié #}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu de départ</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#4caf50"></i>Non spécifié</span></p>
              </div>
            {% endif %}
          {% else %}
              {# s'il n'y a pas de lieu de départ on affiche non spécifié #}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu de départ</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#4caf50"></i>Non spécifié</span></p>
              </div>
          {% endif %}
          {# on verifie que le lieu d'arrivee existe #}
          {% if activite.lieuArrivee is not null %}
            {# si le nom de rue du lieu d'arrivée n'est pas nul #}
            {% if activite.lieuArrivee.nomRue != null %}
              {# on affiche le numéro(s'il existe) et le nom du lieu d'arrivée#}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu d'arrivée</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#e51c23"></i>
                {% if activite.lieuArrivee.numeroRue != 0 %}{{ activite.lieuArrivee.numeroRue ~ ", "}}
                {% endif %}{{ activite.lieuArrivee.nomRue }}</span></p>
              </div>
            {% else %}
              {# s'il n'y a pas de nom de rue du lieu d'arrivée on affiche non spécifié #}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu d'arrivée</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#e51c23"></i>Non spécifié</span></p>
              </div>
            {% endif %}
          {% else %}
              {# s'il n'y a pas de lieu d'arrivée on affiche non spécifié #}
              <div class="infos">
                <p><span class="info-label text-muted">Lieu d'arrivée</span><span class="info-valeur"><i class="fa fa-circle-o" style="color:#e51c23"></i>Non spécifié</span></p>
              </div>
          {% endif %}
          
          
          
          {# on affiche la date de départ #}
          <div class="infos">
            <p><span class="info-label text-muted">Date de départ</span><span class="info-valeur"><i class="fa fa-calendar"></i>{{ activite.dateHeureRDV | localizeddate('none', 'none', null, null, "cccc d LLLL yyyy à H'h'mm") }}</span></p>
          </div>
          {# On affiche la date de fin d'inscription à l'activité #}
          <div class="infos">
            <p><span class="info-label text-muted">Date de fin d'inscription  l'activité</span><span class="info-valeur"><i class="fa fa-calendar"></i>{{ activite.dateFermeture | localizeddate('none', 'none', null, null, "cccc d LLLL yyyy à H'h'mm") }}</span></p>
          </div>
          {# On affiche le temps estimé #}
          <div class="infos">
            <p><span class="info-label text-muted">Temps estimé</span><span class="info-valeur"><i class="fa fa-clock-o"></i>{{ activite.duree | localizeddate('none', 'none', null, null, "H 'h' mm") }}</span></p>
          </div>
          {# On affiche le nombre de places limite de l'activité #}
          <div class="infos">
            <p><span class="info-label text-muted">Nombre de places (vous inclus)</span><span class="info-valeur"><i class="fa fa-users"></i>{{ activite.nbPlaces }} places</span></p>
          </div>
        </div>
      </div>
      
      
      
      
      {# Panel information #}
      <div class="panel panel-default">
        {# titre du pannel #}
        <div class="panel-heading">
          <h3 class="panel-title">Informations</h3>
        </div>
        {# corps du pannel qui affiche la description de l'activité #}
        <div class="panel-body">
          {#{{activite.description}}#}
          {{ activite.description | raw }}
          {# {{ activite.description | bbcode_filter('default') }} #}
        </div>
      </div>
    </div>
    
    
    
    {# Panel participant #}
    <div class="col-md-4">
      <div class="panel panel-default">
        {# titre du panel #}
        <div class="panel-heading">
          <h3 class="panel-title">Participants ({% if activite.nbPlaces - activite.nbParticipants == 1 %}<span class="text-red">{{ activite.nbPlaces - activite.nbParticipants }}  place restante</span>{% else %}{{ activite.nbPlaces - activite.nbParticipants }}  places restantes{% endif %})</h3>
        </div>
        {# corps du panel #}
        <div class="panel-body">
          {# bouton particpants #}
          {# Button trigger modal #}
          {#<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#modalParticipants">
            Participants
          </button>#}

          {# Modal lorsque l'on clique sur le bouton participant #}
          <div class="modal fade" id="modalParticipants" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                  <h4 class="modal-title" id="myModalLabel">Participants</h4>
                </div>
                <div class="modal-body">
                  <div>
                    {# Nav tabs correspondant aux deux onglets#}
                    <ul class="nav nav-tabs" role="tablist">
                      {# Onglet particpants #}
                      <li role="presentation" class="active"><a href="#participantsAcceptes" aria-controls="participant" role="tab" data-toggle="tab">Participants</a></li>
                      {% if estOrganisateur %}
                        {# Onglet en attente #}
                        <li role="presentation"><a href="#participantsEnAttente" aria-controls="enAttente" role="tab" data-toggle="tab">En attente</a></li>
                      {% endif %}
                    </ul>


                    {# Tab panes #}
                     {# Onglet participants de la boite modale lorsqu'on clique sur participant #}
                    <div class="tab-content">
                      <div role="tabpanel" class="tab-pane fade in active" id="participantsAcceptes">
                        <br>
                        {% for participationCourant in tabParticipants if participationCourant.estAccepte == 1 %}
                          {# Affiche un block utilisateur prefixButton permet de différencier les bouttons de la liste principal, et de la liste dans un modal. #}
                          {% set prefixButton = "ModalAccepter" %}
                          {% include "mooveActiviteBundle:Activite:blockListeUtiisateutDetail.html.twig" %}
                        {% endfor %}
                      </div>
                      
                      {# Onglet en attente de la boite modale lorsqu'on clique sur participant #}
                      <div role="tabpanel" class="tab-pane fade" id="participantsEnAttente">
                        {% for participationCourant in tabParticipants if participationCourant.estAccepte == 0 %}
                          {% set prefixButton = "ModalEnAttente" %}
                          {# Affiche un block utilisateur comme ci-dessus, et y adjoint la modal de refus. #}
                          {% include "mooveActiviteBundle:Activite:blockListeUtiisateutDetail.html.twig" %}
                          {% include "mooveActiviteBundle:Activite:blockModalRefuser.html.twig" %}
                        {% else %}
                          <br>Aucun utilisateur n'a envoyé de demande de participation à l'activité
                        {% endfor %}
                      </div>
                    </div>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                </div>
              </div>
            </div>
          </div>
          {# affichage des participants #}
          {% set nbParticipantsAfficher = 3 %} {# nombre de participant total a afficher #}
            
          {% for participationCourant in tabParticipants|slice(0, nbParticipantsAfficher) %}
            {% set prefixButton = "ListeRandom" %}
            {# Permet d'affiché une utilisateur de participationCourant, et d'y adjoindre la modal de refus, uniquement si nécessaire. #}
            {% include "mooveActiviteBundle:Activite:blockListeUtiisateutDetail.html.twig" %}
            {% if estOrganisateur and participationCourant.estAccepte == 0 %}
              {# On ajoute la modal uniquement si nécessaire #}
              {% include "mooveActiviteBundle:Activite:blockModalRefuser.html.twig" %}
            {% endif %}
          {% endfor %} 
          {# Ajoute le lien vers la modal qui affiche l'intégralité de la liste des participants.#}
          {% if nbParticipantsAfficher < tabParticipants|length %}
            <button type="button" class="list-group-item" data-toggle="modal" data-target="#modalParticipants">
              <center><i>+ {{tabParticipants|length - nbParticipantsAfficher}} participant{% if (tabParticipants|length - nbParticipantsAfficher) > 1 %}s{% endif %}</i></center>
            </button>
          {% endif %}
          {# estAccepter == 1 :> validé | estAccepter == 2 :> refusé | estAccepter == 0 :> en attente #} 
          {% if estOrganisateur %} 
            {% if ("now" | date("Ymd") > activite.dateHeureRDV | date("Ymd")) %}
              <button type="button" class="btn btn-primary btn-lg disabled">Activité terminée</button>
            {% else %}
              <a href="{{ path('moove_activite_modifier_activite', {'idActivite': activite.id}) }}" class="btn btn-primary btn-lg">Modifier l'activité</a>
              <button type="button" class="btn btn-danger btn-lg" data-toggle="modal" data-target="#modalSupprimer">Supprimer l'activité</button>
            {% endif %}
            {# Modal de suppression d'activité #}
            {% include "mooveActiviteBundle:Activite:blockModalSupprimer.html.twig" %}
          {% else %} 
            {# Si l'on n'est pas organisateur #}
            {% if ("now" | date("Ymd") > activite.dateFermeture | date("Ymd")) %} 
              {% if estAccepte == 1 %}
                <button type="button" class="btn btn-warning btn-lg disabled">Activité fermée</button>
              {% elseif estAccepte == 2 %}
                <button type="button" class="btn btn-warning btn-lg disabled">Activité fermée</button>
              {% else %} {# estAccepter == 0 #}
                <button type="button" class="btn btn-warning btn-lg disabled">Activité fermée</button>
              {% endif %} 
            {% else %} 
              {# si l'activite n'est pas fermé #}
              {% if estParticipant %} 
                {% if estAccepte == 1 %}
                  <button type="button" class="btn btn-danger btn-lg" data-toggle="modal" data-target="#quitterActivite">Quitter l'activité</button>
                {% elseif estAccepte == 2 %}
                  <button type="button" class="btn btn-danger btn-lg disabled">Vous avez été refusé</button>
                {% else %} {# estAccepter == 0 #}
                  <button type="button" class="btn btn-warning btn-lg disabled">Demande envoyée</button>
                {% endif %} 
              {% else %}
                <a href="{{ path('moove_activite_demande_participation', {'idActivite': activite.id, 'idUtilisateur': app.user.id}) }}">
                  <button type="button" class="btn btn-primary btn-lg">Je veux participer</button>
                </a>
              {% endif %} 
            {% endif %} {# fini le si l'activite n'est pas finis #}
            {# Modal #}
            <div class="modal fade" id="quitterActivite" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
             <div class="modal-dialog" role="document">
               <div class="modal-content">
                 <div class="modal-header">
                   <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                   <h4 class="modal-title" id="myModalLabel">Quitter</h4>
                 </div>
                 <div class="modal-body">
                   Voulez-vous vraiment quitter cette activité?
                 </div>
                 <div class="modal-footer">
                   <button type="button" class="btn btn-primary" data-dismiss="modal">Annuler</button>
                   <a href="{{ path( 'moove_activite_quitter_activite', { 'idActivite': activite.id, 'idUtilisateur': app.user.id})}}">
                     <button type="button" class="btn btn-danger">Quitter l'activité</button>
                   </a>
                 </div>
               </div>
             </div>
            </div>
          {% endif %} {# finis le si on est organisateur #}
      </div>
    </div> {# fini le panel participant #}
  </div> {# fini le "colone où se trouve les panneaux informations sur l'activité et information" #}
</div>

<div class="row">
  <div class="col-md-12">
    <h1>Carte</h1>
    <div id="map" style="height: 500px;"></div>
  </div>
</div>

<br>
<div class="row">
  <div class="col-md-12">
    {% include "mooveActiviteBundle:Activite:blockCommentaire.html.twig" %}
  </div>
</div>

</section>
{% endblock %}
{% block javascripts %}
  <script>
    function initMap() {
      var lieuRDV = {lat: {{ activite.lieuRDV.latitude }}, lng: {{ activite.lieuRDV.longitude }}};
      {% if activite.lieuDepart is not null %}
        var lieuDepart = {lat: {{ activite.lieuDepart.latitude }}, lng: {{ activite.lieuDepart.longitude }}};
        var lieuArrivee_place_id = null;
      {% endif %}
      {% if activite.lieuArrivee is not null %}
        var lieuArrivee = {lat: {{ activite.lieuArrivee.latitude }}, lng: {{ activite.lieuArrivee.longitude }}};
        var lieuArrivee_place_id = null;
      {% endif %}
      
      // Transposer les longitudes et latitudes en place_id et vice-versa
      var geocoder = new google.maps.Geocoder;
      
      // Créé un objet map et indique dans quel id de div elle sera affichée
      var map = new google.maps.Map(document.getElementById('map'), {
        center: lieuRDV,
        scrollwheel: false,
        zoom: 15
      });
      
      // Créé une fenêtre avec les informations sur le lieu de rendez-vous
      var infoWindowLieuRDV = new google.maps.InfoWindow();
      
      // Ouvrir la fenêtre du marker et y insérer l'adresse récupérée grâce à la longitude et latitude
      geocoder.geocode({'location': lieuRDV}, function(resultLieuRDV, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          if (resultLieuRDV[1]) {
            infoWindowLieuRDV.setContent('<div><strong>Lieu de rendez-vous : </strong><br>' +
                                      resultLieuRDV[1].formatted_address + '</div>');
          } else {
            window.alert('Aucun résultat trouvé.');
          }
        } else {
          window.alert('Geocoder a échoué à cause de : ' + status);
        }
      });
    
      // Créé un marker sur la carte et le positionne à l'adresse du lieu de rendez-vous
      var markerLieuRDV = new google.maps.Marker({
        map: map,
        position: lieuRDV,
        title: 'Lieu de rendez-vous'
      });
      
      // Lorsqu'on clique sur le marker affiche la fenêtre infoWindowLieuRDV
      markerLieuRDV.addListener('click', function(){
        infoWindowLieuRDV.open(map, markerLieuRDV);
      });
      
      {% if activite.lieuDepart is not null %}
      
        // Créé un marker sur la carte et le positionne à l'adresse du lieu de départ
        var markerLieuDepart = new google.maps.Marker({
          map: map,
          position: lieuDepart,
          title: 'Lieu de départ'
        });
        // Créé une fenêtre avec les informations sur le lieu de rendez-vous
        var infoWindowLieuDepart = new google.maps.InfoWindow();
        var lieuDepart_place_id;
        geocoder.geocode({'location': lieuDepart}, function(resultLieuDepart, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            if (resultLieuDepart[1]) {
              lieuDepart_place_id = resultLieuDepart[1];
              infoWindowLieuDepart.setContent('<div><strong>Lieu de départ : </strong><br>' +
                                        lieuDepart_place_id.formatted_address + '</div>');
              infoWindowLieuDepart.open(map, markerLieuDepart);
            } else {
              window.alert('Aucun résultat trouvé.');
            }
          } else {
            window.alert('Geocoder a échoué à cause de : ' + status);
          }
        });
        
        // Lorsqu'on clique sur le marker affiche la fenêtre infoWindowLieuRDV
        markerLieuDepart.addListener('click', function(){
          infoWindowLieuDepart.open(map, markerLieuDepart);
        });
      {% endif %}
      
      {% if activite.lieuArrivee is not null %}
        // Créé un marker sur la carte et le positionne à l'adresse du lieu d'arrivée
        var markerLieuArrivee = new google.maps.Marker({
          map: map,
          position: lieuArrivee,
          title: 'Lieu de d\'arrivée'
        });
        
        // Créé une fenêtre avec les informations sur le lieu d'arrivée
        var infoWindowLieuArrivee = new google.maps.InfoWindow();
        geocoder.geocode({'location': lieuArrivee}, function(resultLieuArrivee, status) {
          if (status === google.maps.GeocoderStatus.OK) {
            if (resultLieuArrivee[1]) {
              lieuArrivee_place_id = resultLieuArrivee[1].place_id;
              infoWindowLieuArrivee.setContent('<div><strong>Lieu d\'arrivée : </strong><br>' +
                                        resultLieuArrivee[1].formatted_address + '</div>');
              infoWindowLieuArrivee.open(map, markerLieuArrivee);
            } else {
              window.alert('Aucun résultat trouvé.');
            }
          } else {
            window.alert('Geocoder a échoué à cause de : ' + status);
          }
        });
        
        // Lorsqu'on clique sur le marker affiche la fenêtre infoWindowLieuArrivee
        markerLieuArrivee.addListener('click', function(){
          infoWindowLieuArrivee.open(map, markerLieuArrivee);
        });
      {% endif %}
    }
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDmo1B7t569caLPAVZZNdcoH97JCnHRqNM&libraries=places&callback=initMap"></script>
{% endblock %}